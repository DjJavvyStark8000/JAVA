/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Layer1_Interface;

import Config.Substracting;
import Config.FinalVariables;
import Layer2_BusinessLogic.BL_Accounting;
import Layer2_BusinessLogic.BL_Cliente;
import Layer2_BusinessLogic.BL_DetalleFactura;
import Layer2_BusinessLogic.BL_EncabezadoFactura;
import Layer4_Entities.Ent_DetalleFactura;
import Layer4_Entities.Ent_EncabezadoFactura;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author djjav
 */
public class frmPlatform extends javax.swing.JInternalFrame {

    //table model global variable to make table none editable
    DefaultTableModel theTableModel;
    //list the purchased products on a table
    private static List<Object[]> receiptLines = new ArrayList<>();
    //make a list of the substracting products
    private static List<Object[]> productSubtractDetails = new ArrayList<>();
    // Specify a relative file path to your icon image to keep after pressed
    private static String selectedImage = "src/resources/images/newSelected.png";
    private static String regularImage = "src/resources/images/newCoffee.png";
    //booleans control add to receipt enabled button
    private static boolean hasCoffee = false;
    private static boolean hasSize = false;
    private static boolean hasQuantity = false;
    private static boolean isResetting = false;// avoids conflict when cleaning form
    // Your existing array
    Object[] addSubtractingProducts = { /* your initial values here */};

    /**
     * Creates new form frmPlatform
     */
    public frmPlatform() {
        initComponents();
        //get todays date and current time
        Substracting accounting = new Substracting(); // Create an instance of Accounting
        txtDate.setText(accounting.getFechaActual());
        currentTimeUpdater();
        //initialize table titles
        newTable();
        // Initialize or add rows in the constructor.
        Object[] oneRow = new Object[4];
        oneRow[0] = "";
        oneRow[1] = "";
        oneRow[2] = "";
        oneRow[3] = "";
        receiptLines.add(oneRow);

        BL_Accounting.pullProductList("");//load products list at first to access ids quicker

        //combolisteners initializer
        loadComboListeneres();

    }

    //gets/sets
    public void addRow(Object[] row) {
        receiptLines.add(row);
    }

    public List<Object[]> getRows() {
        return receiptLines;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        panelColor = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnExpresso = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnIrish = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnCappuccino = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnLatte = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnBlack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btnBrew = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnWithMilk = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        btnMocha = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        panelReceipt = new javax.swing.JPanel();
        txtClientName = new javax.swing.JTextField();
        txtClientEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtReceiptId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtReceiptDetail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtBruteTotal = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        txtDiscount = new javax.swing.JTextField();
        txtNetTotal = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnPrintPDF = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnSaveReceipt = new javax.swing.JButton();
        btnCancelOrder = new javax.swing.JButton();
        panelOrderDetail = new javax.swing.JPanel();
        panelCupSize = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        cboCupSize = new javax.swing.JComboBox<>();
        panelQuantity = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        cboQuantity = new javax.swing.JComboBox<>();
        panelSugar = new javax.swing.JPanel();
        cboSugar = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        panelCream = new javax.swing.JPanel();
        cboCream = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        btnAddToReceipt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        panelMilk = new javax.swing.JPanel();
        cboMilk = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        lblLoading = new javax.swing.JLabel();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        panelColor.setBackground(new java.awt.Color(31, 42, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnExpresso.setBackground(new java.awt.Color(255, 255, 255));
        btnExpresso.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnExpresso.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnExpresso.setBorderPainted(false);
        btnExpresso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExpresso.setFocusPainted(false);
        btnExpresso.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnExpresso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpressoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EXPRESSO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExpresso, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExpresso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnIrish.setBackground(new java.awt.Color(255, 255, 255));
        btnIrish.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnIrish.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnIrish.setBorderPainted(false);
        btnIrish.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIrish.setFocusPainted(false);
        btnIrish.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnIrish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrishActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("IRISH");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIrish, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIrish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnCappuccino.setBackground(new java.awt.Color(255, 255, 255));
        btnCappuccino.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnCappuccino.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnCappuccino.setBorderPainted(false);
        btnCappuccino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCappuccino.setFocusPainted(false);
        btnCappuccino.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCappuccinoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CAPPUCCINO");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCappuccino, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCappuccino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnLatte.setBackground(new java.awt.Color(255, 255, 255));
        btnLatte.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnLatte.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnLatte.setBorderPainted(false);
        btnLatte.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLatte.setFocusPainted(false);
        btnLatte.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLatteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LATTE");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLatte, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLatte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnBlack.setBackground(new java.awt.Color(255, 255, 255));
        btnBlack.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnBlack.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnBlack.setBorderPainted(false);
        btnBlack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBlack.setFocusPainted(false);
        btnBlack.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("NEGRO");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBlack, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBlack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnBrew.setBackground(new java.awt.Color(255, 255, 255));
        btnBrew.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnBrew.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnBrew.setBorderPainted(false);
        btnBrew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrew.setFocusPainted(false);
        btnBrew.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnBrew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrewActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("BREW");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBrew, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBrew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnWithMilk.setBackground(new java.awt.Color(255, 255, 255));
        btnWithMilk.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnWithMilk.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnWithMilk.setBorderPainted(false);
        btnWithMilk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnWithMilk.setFocusPainted(false);
        btnWithMilk.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnWithMilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithMilkActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CON LECHE");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnWithMilk, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnWithMilk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED))));

        btnMocha.setBackground(new java.awt.Color(255, 255, 255));
        btnMocha.setIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newCoffee.png")); // NOI18N
        btnMocha.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btnMocha.setBorderPainted(false);
        btnMocha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMocha.setFocusPainted(false);
        btnMocha.setSelectedIcon(new javax.swing.ImageIcon("C:\\Users\\djjav\\Desktop\\JAVA\\Coffe_Shop_Fase2_JAVA\\src\\resources\\images\\newSelected.png")); // NOI18N
        btnMocha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMochaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("MOCHA");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMocha, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnMocha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        panelReceipt.setBackground(new java.awt.Color(255, 255, 255));

        txtClientName.setEditable(false);
        txtClientName.setText("Cliente no registrado");
        txtClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientNameActionPerformed(evt);
            }
        });

        txtClientEmail.setEditable(false);
        txtClientEmail.setText("Correo del cliente");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Factura");

        txtReceiptId.setEditable(false);
        txtReceiptId.setText("000000");
        txtReceiptId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReceiptIdActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Cliente");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Fecha");

        txtDate.setEditable(false);
        txtDate.setText("00/00/0000");

        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Detalle");

        txtReceiptDetail.setText("000000");

        tblDetails.setAutoCreateRowSorter(true);
        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetails);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Impuesto");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Total Bruto");

        txtBruteTotal.setEditable(false);
        txtBruteTotal.setText("0.00");
        txtBruteTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBruteTotalActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Descuento");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Total Neto");

        txtTax.setEditable(false);
        txtTax.setText("0.00");

        txtDiscount.setEditable(false);
        txtDiscount.setText("0.00");

        txtNetTotal.setEditable(false);
        txtNetTotal.setText("0.00");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Hora");

        txtTime.setEditable(false);
        txtTime.setText("00:00:00");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Coffee Shop");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel9)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelReceiptLayout = new javax.swing.GroupLayout(panelReceipt);
        panelReceipt.setLayout(panelReceiptLayout);
        panelReceiptLayout.setHorizontalGroup(
            panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtClientEmail)
                    .addComponent(txtClientName)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                    .addGroup(panelReceiptLayout.createSequentialGroup()
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addGroup(panelReceiptLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtReceiptDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelReceiptLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNetTotal))
                            .addGroup(panelReceiptLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelReceiptLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDiscount)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReceiptLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBruteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReceiptLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTime)
                            .addComponent(txtReceiptId, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDate, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap())
        );
        panelReceiptLayout.setVerticalGroup(
            panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReceiptLayout.createSequentialGroup()
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReceiptLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10))
                    .addGroup(panelReceiptLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtReceiptId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtReceiptDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtBruteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnPrintPDF.setText("IMPRIMIR");
        btnPrintPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintPDFActionPerformed(evt);
            }
        });

        btnExit.setText("SALIR");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSaveReceipt.setText("GUARDAR");
        btnSaveReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveReceiptActionPerformed(evt);
            }
        });

        btnCancelOrder.setText("CANCELAR");
        btnCancelOrder.setEnabled(false);

        panelOrderDetail.setBackground(new java.awt.Color(255, 255, 255));
        panelOrderDetail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelCupSize.setBackground(new java.awt.Color(204, 204, 204));

        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Tamaño");

        cboCupSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "?", "Pequeño", "Mediano", "Grande" }));

        javax.swing.GroupLayout panelCupSizeLayout = new javax.swing.GroupLayout(panelCupSize);
        panelCupSize.setLayout(panelCupSizeLayout);
        panelCupSizeLayout.setHorizontalGroup(
            panelCupSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCupSizeLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelCupSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(cboCupSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        panelCupSizeLayout.setVerticalGroup(
            panelCupSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCupSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboCupSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        panelQuantity.setBackground(new java.awt.Color(204, 204, 204));

        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Cantidad");

        cboQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", " " }));

        javax.swing.GroupLayout panelQuantityLayout = new javax.swing.GroupLayout(panelQuantity);
        panelQuantity.setLayout(panelQuantityLayout);
        panelQuantityLayout.setHorizontalGroup(
            panelQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelQuantityLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelQuantityLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cboQuantity, 0, 85, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelQuantityLayout.setVerticalGroup(
            panelQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelQuantityLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        panelSugar.setBackground(new java.awt.Color(204, 204, 204));

        cboSugar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Azucar");

        javax.swing.GroupLayout panelSugarLayout = new javax.swing.GroupLayout(panelSugar);
        panelSugar.setLayout(panelSugarLayout);
        panelSugarLayout.setHorizontalGroup(
            panelSugarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSugarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelSugarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSugarLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(cboSugar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel21))
                .addGap(30, 30, 30))
        );
        panelSugarLayout.setVerticalGroup(
            panelSugarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSugarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboSugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        panelCream.setBackground(new java.awt.Color(204, 204, 204));

        cboCream.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Crema");

        javax.swing.GroupLayout panelCreamLayout = new javax.swing.GroupLayout(panelCream);
        panelCream.setLayout(panelCreamLayout);
        panelCreamLayout.setHorizontalGroup(
            panelCreamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreamLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelCreamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCreamLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cboCream, 0, 84, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelCreamLayout.setVerticalGroup(
            panelCreamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCreamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        btnAddToReceipt.setText("INSERTAR EN FACTURA");
        btnAddToReceipt.setEnabled(false);
        btnAddToReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToReceiptActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(31, 42, 102));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Siga las intrucciones de las casilla en verde");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(14, 14, 14))
        );

        panelMilk.setBackground(new java.awt.Color(204, 204, 204));

        cboMilk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Leche");

        javax.swing.GroupLayout panelMilkLayout = new javax.swing.GroupLayout(panelMilk);
        panelMilk.setLayout(panelMilkLayout);
        panelMilkLayout.setHorizontalGroup(
            panelMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMilkLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMilkLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 53, Short.MAX_VALUE))
                    .addComponent(cboMilk, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelMilkLayout.setVerticalGroup(
            panelMilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMilkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelOrderDetailLayout = new javax.swing.GroupLayout(panelOrderDetail);
        panelOrderDetail.setLayout(panelOrderDetailLayout);
        panelOrderDetailLayout.setHorizontalGroup(
            panelOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrderDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelOrderDetailLayout.createSequentialGroup()
                        .addComponent(panelCupSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelSugar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOrderDetailLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddToReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelOrderDetailLayout.setVerticalGroup(
            panelOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrderDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelCupSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelSugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelCream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddToReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLoading.setForeground(new java.awt.Color(51, 204, 0));
        lblLoading.setText("LISTO...");

        javax.swing.GroupLayout panelColorLayout = new javax.swing.GroupLayout(panelColor);
        panelColor.setLayout(panelColorLayout);
        panelColorLayout.setHorizontalGroup(
            panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColorLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelColorLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelColorLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelOrderDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelColorLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColorLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(btnPrintPDF)
                        .addGap(15, 15, 15)
                        .addComponent(btnCancelOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveReceipt)
                        .addGap(12, 12, 12)
                        .addComponent(btnExit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelColorLayout.setVerticalGroup(
            panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelColorLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelColorLayout.createSequentialGroup()
                        .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(321, 321, 321))
                    .addGroup(panelColorLayout.createSequentialGroup()
                        .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrintPDF)
                    .addComponent(btnExit)
                    .addComponent(btnSaveReceipt)
                    .addComponent(btnCancelOrder))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtReceiptIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReceiptIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReceiptIdActionPerformed

    private void txtClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientNameActionPerformed

    private void txtBruteTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBruteTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBruteTotalActionPerformed

    private void btnSaveReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveReceiptActionPerformed

        takeFromDataBase();
        addReceiptDetail();
        addReceipt();
    }//GEN-LAST:event_btnSaveReceiptActionPerformed

    //built receipt details table in the database
    private void addReceiptDetail() {

        BigDecimal cantidad;
        String nombre;
        String tamano;
        BigDecimal precio;
        BigDecimal subtotal;
        int productId;
        int returnId;
        //loop the array to grab the informacion to insert in the database
        for (Object[] row : receiptLines) {
            //instance of the object
            Ent_DetalleFactura receiptDetail = new Ent_DetalleFactura();
            if (row.length >= 5) { // Verify row length  
                cantidad = (BigDecimal) row[0];
                nombre = (String) row[1];
                tamano = (String) row[2];
                precio = (BigDecimal) row[3];
                subtotal = (BigDecimal) row[4];
                productId = (int) row[5];
                receiptDetail.setId_detalle((Integer.valueOf(txtReceiptId.getText())));
                receiptDetail.setId_producto(productId);
                receiptDetail.setCantidad(cantidad.intValue());
                receiptDetail.setSubtotal(subtotal);

                BL_DetalleFactura logicReceiptDetail = new BL_DetalleFactura();
                try {
                    returnId = logicReceiptDetail.callInsertarDetalleFactura(receiptDetail);
                } catch (Exception e) {
                    e.printStackTrace(); // Print the full stack trace for debugging
                    JOptionPane.showMessageDialog(null, "Error inserting receipt detail: " + e.getMessage());
                }
            }
        }
    }

//add Receipt header table to the database
    private void addReceipt() {

        int returnId = 0;
        try {

            //instance of the object Receipt header
            Ent_EncabezadoFactura receiptHeader = new Ent_EncabezadoFactura();
            receiptHeader.setId_encabezado(Integer.parseInt(txtReceiptId.getText()));

            BL_Cliente cliente = new BL_Cliente();
            int idCliente = cliente.callClientIdByEmail(txtClientEmail.getText());
            receiptHeader.setId_cliente(idCliente);
            receiptHeader.setFecha(txtDate.getText());
            receiptHeader.setImpuesto(Substracting.getTheTax());
            receiptHeader.setDescuento(Substracting.getTheDiscount());
            receiptHeader.setTotal(Substracting.getNetTotal());

            BL_EncabezadoFactura logicReceiptHeader = new BL_EncabezadoFactura();
            returnId = logicReceiptHeader.callInsertarEncabezadoFactura(receiptHeader);
        } catch (Exception e) {
            e.printStackTrace(); // Print the full stack trace for debugging
            JOptionPane.showMessageDialog(null, "Error inserting receipt: " + e.getMessage());
        }

    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //Salir
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    //add or uptade table
    public void addOrUpdateRow(Object[] newRowData) {
        String productName = newRowData[1].toString();
        String size = newRowData[2].toString();

        for (int i = 0; i < receiptLines.size(); i++) {
            Object[] row = receiptLines.get(i);
            if (row[1].toString().equals(productName) && row[2].toString().equals(size)) {
                // Actualiza la cantidad si el producto ya existe
                int currentQuantity = Integer.parseInt(row[0].toString());
                int newQuantity = Integer.parseInt(newRowData[0].toString());
                row[0] = String.valueOf(currentQuantity + newQuantity);

                // Actualiza el subtotal
                double currentSubtotal = Double.parseDouble(row[4].toString());
                double newSubtotal = Double.parseDouble(newRowData[4].toString());
                row[4] = String.valueOf(currentSubtotal + newSubtotal);

                refreshTable();
                return; // Termina la función después de actualizar
            }
        }

        // Si el producto no existe, agrega una nueva fila
        receiptLines.add(newRowData);
        refreshTable();
    }


    private void btnAddToReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToReceiptActionPerformed
        isResetting = true;//avoids resetting color conflict
        // Find out product price by calling method to set it      
        BigDecimal priceTotal = Substracting.productPriceUnit();
        BigDecimal sugarTotal;
        BigDecimal creamTotal;
        BigDecimal milkTotal;
        BigDecimal creamQuantity;
        BigDecimal milkQuantity;

        if (cboSugar.getSelectedIndex() >= 0) {
            sugarTotal = new BigDecimal("0.0");
            priceTotal = priceTotal.add(sugarTotal);
        }

        if (cboCream.getSelectedIndex() >= 0) {
            // cream oz to substract
            creamQuantity = new BigDecimal(cboCream.getSelectedItem().toString());

            // Multiply creamPrice by Accounting.priceWithCream and add it to priceTotal
            creamTotal = creamQuantity.multiply(FinalVariables.priceWithCream);
            priceTotal = priceTotal.add(creamTotal);
        }

        if (cboMilk.getSelectedIndex() >= 0) {
            // milk o
            milkQuantity = new BigDecimal(cboMilk.getSelectedItem().toString());

            // Multiply milkPrice by Accounting.priceWithMilk and add it to priceTotal
            milkTotal = milkQuantity.multiply(FinalVariables.priceWithMilk);
            priceTotal = priceTotal.add(milkTotal);
        }
        //reset product price with added extras
        Substracting.setUnitPrice(priceTotal);
        //find subttotal and brute total
        Substracting.productSubTotal();
        //search for the product id using the name and description
        int productId = BL_Accounting.findProductByNameDesc(Substracting.getProductName(), Substracting.getProductSize());
        // add or update row
        Object[] newRowData = {Substracting.getOrderQuantity(), Substracting.getProductName(),
            cboCupSize.getSelectedItem(), Substracting.getUnitPrice(), Substracting.getSubTotal(), productId};
        addOrUpdateRow(newRowData);

        //separated array list of substracting quantities
        productSubstractQuantities();

        //call the brute total generator
        Substracting.productBruteTotal();
        txtBruteTotal.setText(String.valueOf(Substracting.getBruteTotal()));
        //get the tax

        txtTax.setText(String.valueOf(Substracting.taxTotal()));
        //get the discount
        Substracting.discountTotal();
        txtDiscount.setText(String.valueOf(Substracting.getTheDiscount()));
        //get net total
        Substracting.netTotal();
        txtNetTotal.setText(String.valueOf(Substracting.getNetTotal()));
        try {
            // Sleep for one seconds
            Thread.sleep(1000);
            //clear form
            clearCoffeButtons();
            isResetting = false;
        } catch (InterruptedException e) {
            // Handle interrupted exception if necessary
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnAddToReceiptActionPerformed

    //safe all substracting product quantities on object array
    private void productSubstractQuantities() {
        BigDecimal cupSmallAmount = BigDecimal.ZERO;
        BigDecimal cupMediumAmount = BigDecimal.ZERO;
        BigDecimal cupLargeAmount = BigDecimal.ZERO;
        //add to subtracting list id and quantity only
        BL_Accounting.grabProductsIds();

        if (Substracting.getCupSize().equals(new BigDecimal("12.00"))) {
            cupSmallAmount = Substracting.getOrderQuantity();
        }
        if (Substracting.getCupSize().equals(new BigDecimal("16.00"))) {
            cupMediumAmount = Substracting.getOrderQuantity();
        }
        if (Substracting.getCupSize().equals(new BigDecimal("20.00"))) {
            cupLargeAmount = Substracting.getOrderQuantity();
        }

        Object[] addSubtractingProducts = {BL_Accounting.getId_coffee(), Substracting.getCupSize(), BL_Accounting.getId_straw(),
            Substracting.getStrawQuantity(), BL_Accounting.getId_small_cup(), cupSmallAmount, BL_Accounting.getId_medium_cup(),
            cupMediumAmount, BL_Accounting.getId_large_cup(), cupLargeAmount, BL_Accounting.getId_sugar(),
            Substracting.getSugarQuantity(), BL_Accounting.getId_cream(), Substracting.getCreamQuantity(),
            BL_Accounting.getId_milk(), Substracting.getCreamQuantity()};
        //add to array list
        productSubtractDetails.add(addSubtractingProducts);
        // printSubstract();
    }

    //print array of substracting amounts
    private void printSubstract() {
        StringBuilder infoText = new StringBuilder("Information List:\n");

        for (Object[] info : productSubtractDetails) {
            for (Object item : info) {
                infoText.append(item).append(" ");
            }
            infoText.append("\n");
        }

        JOptionPane.showMessageDialog(null, infoText.toString());
    }

    //print array of each line details
    private void printLines() {
        StringBuilder infoText = new StringBuilder("Information List:\n");

        for (Object[] info : receiptLines) {
            for (Object item : info) {
                infoText.append(item).append(" ");
            }
            infoText.append("\n");
        }

        JOptionPane.showMessageDialog(null, infoText.toString());
    }

    //update database
    private void takeFromDataBase() {
        String condition = "";
        int id = 0;
        BigDecimal amount;
        for (Object[] row : productSubtractDetails) {
            if (row.length >= 16) { // Verify row length
                for (int i = 0; i < 16; i++) { // Iterate through all 16 columns

                    if (i % 2 == 0) { // Check if it's even
                        int value = (int) row[i]; // Cast the element to an Integer
                        id = value;
                        condition = "ID_PRODUCTO = '" + id + "'";
                        amount = (BigDecimal) row[i + 1];
                        BL_Accounting.grabProductToUpdate(condition, amount);
                    }
                }
            }
        }
    }


    private void tblDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetailsMouseClicked
        if (evt.getClickCount() == 2) { // Check for double-click
            int selectedRow = tblDetails.getSelectedRow();

            if (selectedRow >= 0) {
                DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
                model.removeRow(selectedRow); // Remove the row from the table

                if (selectedRow < receiptLines.size()) {
                    receiptLines.remove(selectedRow); // Remove the row from the list
                }
            }
        }
    }//GEN-LAST:event_tblDetailsMouseClicked

    private void btnBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlackActionPerformed
        Substracting.setProductName("Negro");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnBlack.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnBlackActionPerformed

    private void btnLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLatteActionPerformed
        Substracting.setProductName("Latte");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnLatte.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnLatteActionPerformed

    private void btnCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCappuccinoActionPerformed
        Substracting.setProductName("Cappuccino");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnCappuccino.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnCappuccinoActionPerformed

    private void btnMochaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMochaActionPerformed
        Substracting.setProductName("Mocha");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnMocha.setIcon(frameIcon);
        indicatorGhostReceipt();//shows gree where to go next
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnMochaActionPerformed

    private void btnWithMilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithMilkActionPerformed
        Substracting.setProductName("WithMilk");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnWithMilk.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnWithMilkActionPerformed

    private void btnBrewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrewActionPerformed
        Substracting.setProductName("Brew");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnBrew.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnBrewActionPerformed

    private void btnExpressoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpressoActionPerformed
        Substracting.setProductName("Expresso");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnExpresso.setIcon(frameIcon);
        indicatorGhostReceipt();//shows gree where to go next
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnExpressoActionPerformed

    private void btnIrishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrishActionPerformed
        Substracting.setProductName("Irish");//this product name
        clearCoffeButtons();//clean all images form buttons to reset late
        Icon frameIcon = new ImageIcon(selectedImage);
        btnIrish.setIcon(frameIcon);
        hasCoffee = true;//required to control add to receipt button
        addToReceiptEnabler();
        greenPanelEnabler();
    }//GEN-LAST:event_btnIrishActionPerformed

    private void btnPrintPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintPDFActionPerformed
        printLines();
    }//GEN-LAST:event_btnPrintPDFActionPerformed

    //add to receipt button enabler
    private static void addToReceiptEnabler() {
        //to add to receipt it has to have at least this booleans true
        if (hasCoffee && hasQuantity && hasSize) {
            btnAddToReceipt.setEnabled(true);
        }
    }

    public void addNewRow(Object[] newRowData) {
        receiptLines.add(newRowData);
        refreshTable();
    }

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
        model.setRowCount(0); // Clear the table
        for (Object[] row : receiptLines) {
            model.addRow(row); // Add each row to the table
        }
    }

    private static void panelColorChanger() {
        //color the guidance panels
        Color lightBack = new Color(204, 204, 204); // RGB for light
        panelCupSize.setBackground(lightBack);
        panelQuantity.setBackground(lightBack);
        panelSugar.setBackground(lightBack);
        panelCream.setBackground(lightBack);
        panelMilk.setBackground(lightBack);
    }

//current time method changes every second
    private void currentTimeUpdater() {
        // Create a Timer that updates the time every second
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Update the txtTime field with the current time
                Substracting accounting = new Substracting(); // Create an instance of Accounting
                txtTime.setText(accounting.getHoraActual());
            }
        });
        // Start the timer
        timer.start();
    }

    //check if the client unique email exists in the database
    private boolean clientEmailExist(String givenEmail) {
        boolean exists = false;
        BL_Cliente clientLogic = new BL_Cliente();
        try {
            exists = clientLogic.callClientEmailExist(givenEmail);
            if (exists) {
                exists = true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ha sucedico un error: " + e.getMessage());
        }
        return exists;
    }

    //send fake object to the database
    private void sendGhostObject() {
        BL_EncabezadoFactura receiptHeaderLogic = new BL_EncabezadoFactura();
        Ent_EncabezadoFactura ghostReceiptHeader = createGhostObject();//temporary client
        boolean clientExists = false;

        int id_Receipt = -1;

        try {
            clientExists = clientEmailExist(FinalVariables.ghostEmail);//correo fantasma
            if (clientExists) {
                id_Receipt = receiptHeaderLogic.callInsertarEncabezadoFactura(ghostReceiptHeader);
                txtReceiptId.setText(String.valueOf(id_Receipt));
                txtClientEmail.setText(FinalVariables.ghostEmail);
                txtReceiptDetail.setText(String.valueOf(id_Receipt));
                lblLoading.setText("LISTO...");//STATE MESSAGE CHANGE
            } else {
                JOptionPane.showMessageDialog(this, "El usuario de tipo GHOST no existe, comunicarse con el administrador");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    //fake object
    private Ent_EncabezadoFactura createGhostObject() {

        Ent_EncabezadoFactura encabezadoFactura = new Ent_EncabezadoFactura();
        encabezadoFactura.setId_cliente(101);
        encabezadoFactura.setFecha(Substracting.getFechaActual());
        encabezadoFactura.setImpuesto(BigDecimal.ZERO);
        encabezadoFactura.setDescuento(BigDecimal.ZERO);
        encabezadoFactura.setTotal(BigDecimal.ZERO);
        return encabezadoFactura;
    }

    //table titles override
    private void newTable() {
        theTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        //fix table with named columns
        tblDetails.setModel(theTableModel);
        //add columns
        theTableModel.addColumn("CANTIDAD");
        theTableModel.addColumn("PRODUCTO");
        theTableModel.addColumn("TAMAÑO");
        theTableModel.addColumn("PRECIO/U");
        theTableModel.addColumn("SUBTOTAL");
    }

    //loading message shows
    private void showLoading() {
        //show loading message
        lblLoading.setText("CARGANDO...");
        lblLoading.paintImmediately(lblLoading.getVisibleRect());
    }

    //gree indicator shows
    private void indicatorGhostReceipt() {
        showLoading();//loading message shows
        //enable cancel order button
        btnCancelOrder.setEnabled(true);
        //color all the panels before green
        panelColorChanger();
        //create GHOST receipt
        sendGhostObject();//create ghos receipt
        Color greenBack = new Color(51, 204, 0); // RGB for green
        panelCupSize.setBackground(greenBack);
    }

    //clear buttons images
    private void clearCoffeButtons() {
        btnAddToReceipt.setEnabled(false);
        hasCoffee = false;//required to control add to receipt button
        hasQuantity = false;
        hasSize = false;
        panelColorChanger();//reset panels to gray
        Icon frameIcon = new ImageIcon(regularImage);
        btnExpresso.setIcon(frameIcon);
        btnWithMilk.setIcon(frameIcon);
        btnLatte.setIcon(frameIcon);
        btnCappuccino.setIcon(frameIcon);
        btnMocha.setIcon(frameIcon);
        btnBlack.setIcon(frameIcon);
        btnBrew.setIcon(frameIcon);
        btnIrish.setIcon(frameIcon);
        // Check the selected index before setting it to 0
        if (cboCupSize.getSelectedIndex() != 0) {
            cboCupSize.setSelectedIndex(0);
        }
        if (cboQuantity.getSelectedIndex() != 0) {
            cboQuantity.setSelectedIndex(0);
        }
        if (cboSugar.getSelectedIndex() != 0) {
            cboSugar.setSelectedIndex(0);
        }
        if (cboCream.getSelectedIndex() != 0) {
            cboCream.setSelectedIndex(0);
        }
        if (cboMilk.getSelectedIndex() != 0) {
            cboMilk.setSelectedIndex(0);
        }

    }

    //green panel enabler
    private static void greenPanelEnabler() {
        Color greenBack = new Color(51, 204, 0); // RGB for green
        panelCupSize.setBackground(greenBack);
    }

    //comboBoxes load action listeners
    private static void loadComboListeneres() {
        // Add ActionListener to the JComboBoxes
        cboCupSize.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isResetting) {
                    String selectedOption = cboCupSize.getSelectedItem().toString();

                    //Set cup oz sizes for transaction
                    if (selectedOption == "Pequeño") {
                        Substracting.setCupSize(Substracting.getCupSmallSize());
                        Substracting.setProductSize("Pequeño");
                    } else if (selectedOption == "Mediano") {
                        Substracting.setCupSize(Substracting.getCupMediumSize());
                        Substracting.setProductSize("Mediano");
                    } else if (selectedOption == "Grande") {
                        Substracting.setCupSize(Substracting.getCupLargeSize());
                        Substracting.setProductSize("Grande");
                    }

                    //color all the panels before green
                    panelColorChanger();
                    Color greenBack = new Color(51, 204, 0); // RGB for green
                    panelQuantity.setBackground(greenBack);
                    hasSize = true;
                    addToReceiptEnabler();
                }

            }

        });

        cboQuantity.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isResetting) {
                    // Get the selected item as a String from cboQuantity
                    String quantityStr = cboQuantity.getSelectedItem().toString();
                    // Convert the selected item String to a BigDecimal
                    BigDecimal quantity = new BigDecimal(quantityStr);
                    Substracting.setOrderQuantity(quantity);//order
                    //one straw per cup ordered
                    Substracting.setStrawQuantity(Substracting.getOrderQuantity());

                    //color all the panels before green
                    panelColorChanger();
                    Color greenBack = new Color(51, 204, 0); // RGB for green
                    panelSugar.setBackground(greenBack);
                    hasQuantity = true;
                    addToReceiptEnabler();
                }
            }

        });

        cboSugar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isResetting) {
                    // Get the selected item as a String from cboSugar
                    String sugarQuantityStr = cboSugar.getSelectedItem().toString();

                    // Convert the selected item String to a BigDecimal
                    BigDecimal sugarQuantity = new BigDecimal(sugarQuantityStr);
                    Substracting.setSugarQuantity(sugarQuantity);

                    //color all the panels before green
                    panelColorChanger();
                    Color greenBack = new Color(51, 204, 0); // RGB for green
                    panelCream.setBackground(greenBack);
                }
            }

        });

        cboCream.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isResetting) {
                    // Get the selected item as a String from cboCream
                    String creamQuantityStr = cboCream.getSelectedItem().toString();

                    // Convert the selected item String to a BigDecimal
                    BigDecimal creamQuantity = new BigDecimal(creamQuantityStr);
                    Substracting.setCreamQuantity(creamQuantity);

                    //color all the panels before green
                    panelColorChanger();
                    Color greenBack = new Color(51, 204, 0); // RGB for green
                    panelMilk.setBackground(greenBack);
                }
            }

        });

        cboMilk.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isResetting) {
// Get the selected item as a String from cboMilk
                    String milkQuantityStr = cboMilk.getSelectedItem().toString();

                    // Convert the selected item String to a BigDecimal
                    BigDecimal milkQuantity = new BigDecimal(milkQuantityStr);
                    Substracting.setMilkQuantity(milkQuantity);
                    //color all the panels before green
                    panelColorChanger();
                }
            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnAddToReceipt;
    private javax.swing.JButton btnBlack;
    private javax.swing.JButton btnBrew;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnCappuccino;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExpresso;
    private javax.swing.JButton btnIrish;
    private javax.swing.JButton btnLatte;
    private javax.swing.JButton btnMocha;
    private javax.swing.JButton btnPrintPDF;
    private javax.swing.JButton btnSaveReceipt;
    private javax.swing.JButton btnWithMilk;
    static javax.swing.JComboBox<String> cboCream;
    static javax.swing.JComboBox<String> cboCupSize;
    static javax.swing.JComboBox<String> cboMilk;
    static javax.swing.JComboBox<String> cboQuantity;
    static javax.swing.JComboBox<String> cboSugar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JPanel panelColor;
    private static javax.swing.JPanel panelCream;
    private static javax.swing.JPanel panelCupSize;
    private static javax.swing.JPanel panelMilk;
    private javax.swing.JPanel panelOrderDetail;
    private static javax.swing.JPanel panelQuantity;
    private javax.swing.JPanel panelReceipt;
    private static javax.swing.JPanel panelSugar;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private javax.swing.JTable tblDetails;
    private static javax.swing.JTextField txtBruteTotal;
    private static javax.swing.JTextField txtClientEmail;
    private static javax.swing.JTextField txtClientName;
    private static javax.swing.JTextField txtDate;
    private static javax.swing.JTextField txtDiscount;
    private static javax.swing.JTextField txtNetTotal;
    private static javax.swing.JTextField txtReceiptDetail;
    private static javax.swing.JTextField txtReceiptId;
    private static javax.swing.JTextField txtTax;
    private static javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
